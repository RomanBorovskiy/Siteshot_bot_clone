from enum import Enum


class Language(str, Enum):
    RU = "ru"
    EN = "en"


class AppMessage(str, Enum):
    START = "start"
    STUB = "stub"
    RESULT = "result"
    ERROR = "error"
    # ANSWER = 'answer'
    # WHOIS = 'whois'
    UNKNOWN_URL = "unknown_url"
    DONT_KNOW = "dont_know"
    BTN_ADD_ME = "add_me"
    BTN_LANGUAGE_SELECT = "btn_language_select"
    LANGUAGE_SELECT = "language_select"
    BTN_REPEAT = "repeat"
    BTN_INFO = "info"
    BTN_RUS = "rus"
    BTN_EN = "en"
    DOMEN_NAME = "domain_name"
    REGISTRAR = "registrar"
    CREATION_DATE = "creation_date"
    EXPIRATION_DATE = "expiration_date"
    UPDATED_DATE = "updated_date"
    NAME_SERVERS = "name_servers"
    REGISTRANT_ORGANIZATION = "registrant_organization"


hello_text_ru = """
üëã –ü—Ä–∏–≤–µ—Ç! –ú–µ–Ω—è –∑–æ–≤—É—Ç *ImagerClone*.
–Ø - –ë–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤.
–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ URL –∞–¥—Ä–µ—Å —Å–∞–π—Ç–∞.
–ù–∞–ø—Ä–∏–º–µ—Ä, wikipedia.org\n
‚Ä¢ –° –ø–æ–º–æ—â—å—é –±–æ—Ç–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏. (_–ê–π–ø–∏–ª–æ–≥–≥–µ—Ä—ã, —Ñ–∏—à–∏–Ω–≥–æ–≤—ã–µ –≤–µ–±-—Å–∞–π—Ç—ã, —Å–∫—Ä–∏–º–µ—Ä—ã –∏ —Ç.–ø_)\n
‚Ä¢ –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ —Å–≤–æ–∏ —á–∞—Ç—ã, –∏ —è —Å–º–æ–≥—É –ø—Ä–æ–≤–µ—Ä—è—Ç—å —Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏.\n
"""

hello_text_en = """
üëã Welcome! My name is ImagerClone.
I'm here for creating capture a website screenshot. To get a screenshot - submit the URL of the Website.
For example wikipedia.org\n
‚Ä¢ With the help of the bot, you can check suspicious links. (_IPloggers, phishing websites, screamers, etc._)\n
‚Ä¢ You can also add me to your chats so that I can check the links that the group chat members send.\n
"""

rus_text = {
    AppMessage.START: hello_text_ru,
    AppMessage.STUB: "‚ö°Ô∏è***–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–∞–π—Ç***",
    AppMessage.RESULT: (
        "<b>–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:</b> {0}\n" "<b>–í–µ–±-—Å–∞–π—Ç:</b> {1}\n" "<b>–í—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏, —Å–µ–∫:</b> {2:.4f}\n"
    ),
    AppMessage.ERROR: "***–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!***",
    AppMessage.BTN_ADD_ME: "–î–æ–±–∞–≤–∏—Ç—å –º–µ–Ω—è –≤ —á–∞—Ç",
    AppMessage.LANGUAGE_SELECT: "üë©üèº‚Äçüíª –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫",
    AppMessage.BTN_LANGUAGE_SELECT: "üá∑üá∫ –í—ã–±–æ—Ä —è–∑—ã–∫–∞",
    AppMessage.BTN_REPEAT: "üåÄ–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É",
    AppMessage.BTN_INFO: "üî¨–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
    AppMessage.BTN_RUS: "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
    AppMessage.BTN_EN: "üá¨üáß English",
    AppMessage.DOMEN_NAME: "–î–æ–º–µ–Ω",
    AppMessage.REGISTRAR: "–†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
    AppMessage.CREATION_DATE: "–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
    AppMessage.EXPIRATION_DATE: "–û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
    AppMessage.UPDATED_DATE: "–û–±–Ω–æ–≤–ª–µ–Ω–æ",
    AppMessage.NAME_SERVERS: "NS —Å–µ—Ä–≤–µ—Ä–∞",
    AppMessage.REGISTRANT_ORGANIZATION: "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è",
    AppMessage.UNKNOWN_URL: "–ù–µ–ø–æ–Ω—è—Ç–Ω—ã–π URL: {0}",
    AppMessage.DONT_KNOW: "–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å —ç—Ç–∏–º...",
}

en_text = {
    AppMessage.START: hello_text_en,
    AppMessage.STUB: "‚ö°Ô∏è***Request sent to website***",
    AppMessage.RESULT: ("<b>Title:</b> {0}\n" "<b>Website:</b> {1}\n" "<b>Time of processing, sec:</b> {2:.4f}"),
    AppMessage.ERROR: "***Error occurred!***",
    AppMessage.BTN_ADD_ME: "Add me to chat",
    AppMessage.LANGUAGE_SELECT: "üë©üèº‚Äçüíª Choose your language",
    AppMessage.BTN_LANGUAGE_SELECT: "üá¨üáß Language selection",
    AppMessage.BTN_REPEAT: "üåÄRefresh",
    AppMessage.BTN_INFO: "üî¨More",
    AppMessage.BTN_RUS: "üá∑üá∫ –†—É—Å—Å–∫–∏–π",
    AppMessage.BTN_EN: "üá¨üáß English",
    AppMessage.DOMEN_NAME: "Domain",
    AppMessage.REGISTRAR: "Registrar",
    AppMessage.CREATION_DATE: "Creation_date",
    AppMessage.EXPIRATION_DATE: "Expiration_date",
    AppMessage.UPDATED_DATE: "updated",
    AppMessage.NAME_SERVERS: "NS servers",
    AppMessage.REGISTRANT_ORGANIZATION: "Organization",
    AppMessage.UNKNOWN_URL: "Unknown URL: {0}",
    AppMessage.DONT_KNOW: "I don't know what this is...",
}

text = {Language.RU: rus_text, Language.EN: en_text}


def _(key: AppMessage, lang: Language = Language.RU) -> str:
    if key in text[lang]:
        result = text[lang][key]

    elif key in text[Language.RU]:
        result = text[Language.RU][key]

    else:
        result = key.value

    return result
